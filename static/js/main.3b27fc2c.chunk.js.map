{"version":3,"sources":["components/habit.jsx","components/habitform.jsx","components/habits.jsx","components/navBar.jsx","app.jsx","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","this","name","count","console","log","className","onClick","PureComponent","Habitform","memo","inputRef","React","createRef","onSubmit","event","preventDefault","current","value","onAdd","ref","type","placeholder","Habits","habits","map","id","onReset","NavBar","href","totalCount","App","state","handleAdd","Date","now","setState","handleReset","item","filter","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b27fc2c.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\n\nclass Habit extends PureComponent {\n  handleIncrement = () => {\n    this.props.onIncrement(this.props.habit);\n  };\n\n  handleDecrement = () => {\n    this.props.onDecrement(this.props.habit);\n  };\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.habit);\n  };\n\n  render() {\n    const { name, count } = this.props.habit; //destructing\n\n    console.log(`habit: ${name}`);\n    return (\n      <li className='habit'>\n        <span className='habit-name'>{name}</span>\n        <span className='habit-count'>{count}</span>\n        <button\n          className='habit-button habit-increase'\n          onClick={this.handleIncrement} //이 콜백을 불러라고 전달\n        >\n          <i className='fas fa-plus-square'></i>\n        </button>\n        <button\n          className='habit-button habit-decrease'\n          onClick={this.handleDecrement}\n        >\n          <i className='fas fa-minus-square'></i>\n        </button>\n        <button\n          className='habit-button habit-delete'\n          onClick={this.handleDelete}\n        >\n          <i className='fas fa-trash'></i>\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Habit;\n","import React, { memo } from 'react';\n\n// 함수형 : props 가 변경되지 않으면, pure component가 변경되지 않을떄 memo를 사용해라\n\nconst Habitform = memo((props) => {\n  // input field 받아 왓는데, 리액트에서는, ref 라는것이 있다.\n  //dom요소에 접근해서, 그요소 value나 클릭이벤트 접근했던것 처럼\n  // 필요할떄 createRef멤버 변수 선언하고, 전달하면 된다\n  const inputRef = React.createRef();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const name = inputRef.current.value;\n    name && props.onAdd(name);\n    inputRef.current.value = '';\n  };\n\n  return (\n    <form className='add-form' onSubmit={handleSubmit}>\n      <input\n        className='input-habit'\n        ref={inputRef}\n        type='text'\n        placeholder='Habit'\n      />\n      <button className='habit-add'>Add</button>\n    </form>\n  );\n});\n\nexport default Habitform;\n","import React, { PureComponent } from 'react';\nimport Habit from './habit';\nimport Habitform from './habitform';\n\nclass Habits extends PureComponent {\n  //lifecycle functions: timer\n  // componentDidMount() {\n  //   console.log(`habut: ${this.props.habit.name} mounted`);\n  // }\n  // componentWillUnmount() {\n  //   console.log(`habut: ${this.props.habit.name} will unmount`);\n  // }\n  render() {\n    console.log('habits');\n    return (\n      <div className='habits'>\n        <Habitform onAdd={this.props.onAdd} />\n        <ul>\n          {this.props.habits.map((habit) => (\n            <Habit\n              key={habit.id}\n              habit={habit}\n              onIncrement={this.props.onIncrement}\n              onDecrement={this.props.onDecrement}\n              onDelete={this.props.onDelete}\n            />\n          ))}\n        </ul>\n        <button className='resetBtn' onClick={this.props.onReset}>\n          Reset All\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Habits;\n","import React, { PureComponent } from 'react';\n\nclass NavBar extends PureComponent {\n  render() {\n    console.log('nav');\n    return (\n      <header className='header'>\n        <a href='/#' className='logo'>\n          <i className='fas fa-leaf'></i>\n        </a>\n        <h1 className='title'>Habit Tracker</h1>\n        <span className='habitCount'>{this.props.totalCount}</span>\n      </header>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport './app.css';\nimport Habits from './components/habits';\nimport NavBar from './components/navBar';\n\nclass App extends Component {\n  state = {\n    habits: [\n      { id: 1, name: 'Reading', count: 0 }, //0\n      { id: 2, name: 'Coding', count: 0 }, //1\n      { id: 3, name: 'Running', count: 0 }, //2\n    ],\n    totalCount: 0,\n    value: '',\n  };\n\n  handleAdd = (name) => {\n    const habits = [...this.state.habits, { id: Date.now(), name, count: 0 }];\n    this.setState({ habits });\n  };\n\n  handleReset = () => {\n    // const habits = this.state.habits.map((habit) => {\n    //   habit.count = 0;\n    //   return habit;\n    // });\n\n    const habits = this.state.habits.map((habit) => {\n      if (habit.count !== 0) {\n        return { ...habit, count: 0 }; //새로운 오브젝트(카운트 다시) 만들어줌\n      }\n      return habit;\n    });\n    this.setState({ habits });\n  };\n\n  handleIncrement = (habit) => {\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        return { ...habit, count: habit.count + 1 }; //새로운 오브젝트(카운트 다시) 만들어줌\n      }\n      return item;\n    });\n    this.setState({ habits });\n  };\n\n  handleDecrement = (habit) => {\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        if (habit.count > 0) {\n          return { ...habit, count: habit.count - 1 }; //새로운 오브젝트(카운트 다시) 만들어줌\n        }\n      }\n      return item;\n    });\n    this.setState({ habits });\n  };\n\n  handleDelete = (habit) => {\n    const habits = this.state.habits.filter((item) => item.id !== habit.id);\n    this.setState({ habits });\n  };\n\n  render() {\n    console.log('app');\n    return (\n      <>\n        <NavBar\n          totalCount={this.state.habits.filter((item) => item.count > 0).length}\n        />\n\n        <Habits\n          habits={this.state.habits}\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onAdd={this.handleAdd}\n          onReset={this.handleReset}\n        />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; // html과 연결하는 작업\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\nReactDOM.render(\n  // use strict 과 같은 기능 : 2 번씩 호출된다. 그래서 잘못된 것은 없는지 확인 가능\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}